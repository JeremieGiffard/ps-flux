{"version":3,"sources":["components/HomePage.js","components/AboutPage.js","components/common/Header.js","appDispatcher.js","actions/actionTypes.js","api/apiUtils.js","api/courseApi.js","api/authorApi.js","stores/courseStore.js","components/CourseList.js","actions/courseActions.js","components/CoursesPage.js","components/NotFoundPage.js","components/common/TextInput.js","components/common/SelectInput.js","components/CourseForm.js","components/ManageCoursePage.js","components/App.js","index.js"],"names":["HomePage","react_default","a","createElement","className","react_router_dom","to","AboutPage","Fragment","React","Component","Header","activeStyle","color","exact","dispatcher","Dispatcher","actionTypes","CREATE_COURSE","LOAD_COURSES","UPDATE_COURSE","DELETE_COURSE","LOAD_AUTHORS","handleResponse","_x","_handleResponse","apply","this","arguments","_callee","response","error","regenerator_default","wrap","_context","prev","next","ok","abrupt","json","status","text","sent","Error","stop","handleError","console","baseUrl","process","REACT_APP_API_URL","_courses","_authors","store","callback","on","removeListener","emit","slug","find","course","EventEmitter","register","action","actionType","filter","id","parseInt","emitChange","push","map","courses","authors","CourseList","props","key","title","authorId","category","onClick","deleteCourse","saveCourse","fetch","method","headers","content-type","body","JSON","stringify","Object","objectSpread","then","catch","courseApi","savedCourse","dispatch","loadCourses","loadAuthors","courseId","toast","CoursesPage","_useState","useState","courseStore","getCourses","_useState2","slicedToArray","setCourses","onChange","useEffect","addChangeListener","length","removeChangeListener","components_CourseList","NotFoundPage","TextInput","wrapperClass","htmlFor","label","type","name","value","defaultProps","SelectInput","author","CourseForm","onSubmit","common_TextInput","errors","common_SelectInput","ManageCoursePage","setErrors","_useState3","_useState4","_useState5","_useState6","setCourse","_useState7","getAuthors","_useState8","setAuthors","match","params","courseActions","getCourseBySlug","log","components_CourseForm","_ref","target","defineProperty","event","preventDefault","_errors","keys","formIsValid","history","success","App","react_toastify","autoClose","hideProgressBar","common_Header","react_router","path","component","from","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.b70acce1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction HomePage() {\n  return (\n    <div className=\"jumbotron\">\n      <h1>Pluralsight Administration</h1>\n      <p>React, Flux, and React Router for ultra-responsive web apps.</p>\n      <Link to=\"about\" className=\"btn btn-primary\">\n        About\n      </Link>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\n\nclass AboutPage extends React.Component {\n  render() {\n    return (\n      <>\n        <h2>About</h2>\n        <p>This app uses React.</p>\n      </>\n    );\n  }\n}\n\nexport default AboutPage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Header() {\n  const activeStyle = { color: \"orange\" };\n  return (\n    <nav>\n      <NavLink activeStyle={activeStyle} exact to=\"/\">\n        Home\n      </NavLink>\n      {\" | \"}\n      <NavLink activeStyle={activeStyle} to=\"/courses\">\n        Courses\n      </NavLink>\n      {\" | \"}\n      <NavLink activeStyle={activeStyle} to=\"/about\">\n        About\n      </NavLink>\n    </nav>\n  );\n}\n\nexport default Header;\n","import { Dispatcher } from \"flux\";\r\nconst dispatcher = new Dispatcher();\r\nexport default dispatcher;\r\n","export default {\r\n\tCREATE_COURSE: \"CREATE_COURSE\",\r\n\tLOAD_COURSES: \"LOAD_COURSE\",\r\n\tUPDATE_COURSE: \"UPDATE_COURSE\",\r\n\tDELETE_COURSE: \"DELETE_COURSE\",\r\n\tLOAD_AUTHORS: \"LOAD_AUTHORS\",\r\n};\r\n","export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/courses/\";\n\nexport function getCourses() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function getCourseBySlug(slug) {\n  return fetch(baseUrl + \"?slug=\" + slug)\n    .then(response => {\n      if (!response.ok) throw new Error(\"Network response was not ok.\");\n      return response.json().then(courses => {\n        if (courses.length !== 1) throw new Error(\"Course not found: \" + slug);\n        return courses[0]; // should only find one course for a given slug, so return it.\n      });\n    })\n    .catch(handleError);\n}\n\nexport function saveCourse(course) {\n  return fetch(baseUrl + (course.id || \"\"), {\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({\n      ...course,\n      // Parse authorId to a number (in case it was sent as a string).\n      authorId: parseInt(course.authorId, 10)\n    })\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function deleteCourse(courseId) {\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/authors/\";\n\nexport function getAuthors() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function saveAuthor(author) {\n  return fetch(baseUrl + (author.id || \"\"), {\n    method: author.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify(author)\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function deleteAuthor(authorId) {\n  return fetch(baseUrl + authorId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","import { EventEmitter } from \"events\";\r\nimport Dispatcher from \"../appDispatcher\";\r\nimport actionTypes from \"../actions/actionTypes\";\r\nimport {} from \"../api/courseApi\";\r\nimport {} from \"../api/authorApi\";\r\n\r\nconst CHANGE_EVENT = \"change\";\r\nlet _courses = [];\r\nlet _authors = [];\r\n\r\nclass CourseStore extends EventEmitter {\r\n\taddChangeListener(callback) {\r\n\t\tthis.on(CHANGE_EVENT, callback);\r\n\t}\r\n\r\n\tremoveChangeListener(callback) {\r\n\t\tthis.removeListener(CHANGE_EVENT, callback);\r\n\t}\r\n\r\n\temitChange() {\r\n\t\tthis.emit(CHANGE_EVENT);\r\n\t}\r\n\r\n\tgetCourses() {\r\n\t\treturn _courses;\r\n\t}\r\n\tgetCourseBySlug(slug) {\r\n\t\treturn _courses.find((course) => course.slug === slug);\r\n\t}\r\n\tsaveCourse() {}\r\n\tgetAuthors() {\r\n\t\treturn _authors;\r\n\t}\r\n}\r\n\r\nconst store = new CourseStore();\r\n\r\nDispatcher.register((action) => {\r\n\tswitch (action.actionType) {\r\n\t\tcase actionTypes.DELETE_COURSE:\r\n\t\t\t_courses = _courses.filter(\r\n\t\t\t\t(course) => course.id !== parseInt(action.id, 10)\r\n\t\t\t);\r\n\t\t\tstore.emitChange();\r\n\t\t\tbreak;\r\n\t\tcase actionTypes.CREATE_COURSE:\r\n\t\t\t_courses.push(action.course);\r\n\t\t\tstore.emitChange();\r\n\t\t\tbreak;\r\n\t\tcase actionTypes.UPDATE_COURSE:\r\n\t\t\t//si course.id === actions.course.id remplace le\r\n\t\t\t_courses = _courses.map((course) =>\r\n\t\t\t\tcourse.id === action.course.id ? action.course : course\r\n\t\t\t);\r\n\t\t\tstore.emitChange();\r\n\t\t\tbreak;\r\n\t\tcase actionTypes.LOAD_COURSES:\r\n\t\t\t_courses = action.courses;\r\n\t\t\tstore.emitChange();\r\n\t\t\tbreak;\r\n\t\tcase actionTypes.LOAD_AUTHORS:\r\n\t\t\t_authors = action.authors;\r\n\t\t\tstore.emitChange();\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t//nothing to do\r\n\t}\r\n});\r\nexport default store;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction CourseList(props) {\n\treturn (\n\t\t<table className=\"table\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Title</th>\n\t\t\t\t\t<th>Author ID</th>\n\t\t\t\t\t<th>Category</th>\n\t\t\t\t\t<td>&nbsp;</td>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{props.courses.map((course) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={course.id}>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<Link to={\"/course/\" + course.slug}>{course.title}</Link>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>{course.authorId}</td>\n\t\t\t\t\t\t\t<td>{course.category}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-danger\"\n\t\t\t\t\t\t\t\t\tonClick={() => props.deleteCourse(course.id)}\n\t\t\t\t\t\t\t\t\tto=\"/courses\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t);\n}\n\nCourseList.propTypes = {\n\tcourses: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.number.isRequired,\n\t\t\ttitle: PropTypes.string.isRequired,\n\t\t\tauthorId: PropTypes.number.isRequired,\n\t\t\tcategory: PropTypes.string.isRequired,\n\t\t})\n\t).isRequired,\n};\n\nexport default CourseList;\n\n","import dispatcher from \"../appDispatcher\";\r\nimport * as courseApi from \"../api/courseApi\";\r\nimport actionTypes from \"./actionTypes\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as authorApi from \"../api/authorApi\";\r\n\r\nexport function saveCourse(course) {\r\n\t//Hey dispatcher, go tell all the stores that a course was just created\r\n\treturn courseApi.saveCourse(course).then((savedCourse) => {\r\n\t\tdispatcher.dispatch({\r\n\t\t\t//if course.id exist => UPDATE_COURSE else CREATE_COURSE\r\n\t\t\tactionType: course.id\r\n\t\t\t\t? actionTypes.UPDATE_COURSE\r\n\t\t\t\t: actionTypes.CREATE_COURSE,\r\n\t\t\tcourse: savedCourse,\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport function loadCourses() {\r\n\treturn courseApi.getCourses().then((courses) => {\r\n\t\tdispatcher.dispatch({\r\n\t\t\tactionType: actionTypes.LOAD_COURSES,\r\n\t\t\tcourses: courses,\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport function loadAuthors() {\r\n\treturn authorApi.getAuthors().then((authors) => {\r\n\t\tdispatcher.dispatch({\r\n\t\t\tactionType: actionTypes.LOAD_AUTHORS,\r\n\t\t\tauthors: authors,\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport function deleteCourse(id) {\r\n\treturn courseApi.deleteCourse(id).then(() => {\r\n\t\tdispatcher.dispatch({\r\n\t\t\tactionType: actionTypes.DELETE_COURSE,\r\n\t\t\tid: id,\r\n\t\t\ttoast: toast.error(\"Course Deleted.\"),\r\n\t\t});\r\n\t});\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport courseStore from \"../stores/courseStore\";\nimport CourseList from \"./CourseList\";\nimport { Link } from \"react-router-dom\";\nimport { loadCourses, deleteCourse } from \"../actions/courseActions\";\n\nfunction CoursesPage() {\n\tconst [courses, setCourses] = useState(courseStore.getCourses());\n\n\tuseEffect(() => {\n\t\tcourseStore.addChangeListener(onChange);\n\t\tif (courseStore.getCourses().length === 0) loadCourses();\n\n\t\treturn () => courseStore.removeChangeListener(onChange); //cleanup on unmount\n\t}, []);\n\n\tfunction onChange() {\n\t\tsetCourses(courseStore.getCourses());\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h2>Courses</h2>\n\t\t\t<Link className=\"btn btn-primary\" to=\"/course\">\n\t\t\t\tAdd Course\n\t\t\t</Link>\n\t\t\t<CourseList courses={courses} deleteCourse={deleteCourse} />\n\t\t</>\n\t);\n}\n\nexport default CoursesPage;\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NotFoundPage() {\n\treturn (\n\t\t<div>\n\t\t\t<h2>Page Not Found</h2>\n\t\t\t<p>404 module like, for bogus URL</p>\n\t\t\t<Link to=\"/\" className=\"btn btn-primary\">\n\t\t\t\tBack to Home\n\t\t\t</Link>\n\t\t</div>\n\t);\n}\n\nexport default NotFoundPage;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction TextInput(props) {\n  let wrapperClass = \"form-group\";\n  if (props.error.length > 0) {\n    wrapperClass += \" has-error\";\n  }\n\n  return (\n    <div className={wrapperClass}>\n      <label htmlFor={props.id}>{props.label}</label>\n      <div className=\"field\">\n        <input\n          id={props.id}\n          type=\"text\"\n          onChange={props.onChange}\n          name={props.name}\n          className=\"form-control\"\n          value={props.value}\n        />\n      </div>\n      {props.error && <div className=\"alert alert-danger\">{props.error}</div>}\n    </div>\n  );\n}\n\nTextInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  error: PropTypes.string\n};\n\nTextInput.defaultProps = {\n  error: \"\"\n};\n\nexport default TextInput;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction SelectInput(props) {\r\n\tlet wrapperClass = \"form-group\";\r\n\tif (props.error.length > 0) {\r\n\t\twrapperClass += \" has-error\";\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={wrapperClass}>\r\n\t\t\t<label htmlFor={props.id}>{props.label}</label>\r\n\t\t\t<div className=\"field\">\r\n\t\t\t\t<select\r\n\t\t\t\t\tid={props.id}\r\n\t\t\t\t\tname={props.name}\r\n\t\t\t\t\tonChange={props.onChange}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<option value=\"0\">Select a Author</option>\r\n\t\t\t\t\t<option value=\"15\">Andy dutronc</option>\r\n\t\t\t\t\t{props.authors.map((author) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<option key={author.id} value={author.id}>\r\n\t\t\t\t\t\t\t\t{author.name}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\r\n\t\t\t{props.error && <div className=\"alert alert-danger\">{props.error}</div>}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nSelectInput.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tname: PropTypes.string.isRequired,\r\n\tlabel: PropTypes.string.isRequired,\r\n\tonChange: PropTypes.func.isRequired,\r\n\tvalue: PropTypes.string,\r\n\terror: PropTypes.string,\r\n};\r\n\r\nSelectInput.defaultProps = {\r\n\terror: \"\",\r\n};\r\n\r\nexport default SelectInput;\r\n","import React, { useState, useEffect } from \"react\";\nimport TextInput from \"./common/TextInput\";\nimport PropTypes from \"prop-types\";\nimport SelectInput from \"./common/SelectInput\";\n\nfunction CourseForm(props) {\n\treturn (\n\t\t<form onSubmit={props.onSubmit}>\n\t\t\t<TextInput\n\t\t\t\tid=\"title\"\n\t\t\t\tlabel=\"Title\"\n\t\t\t\tonChange={props.onChange}\n\t\t\t\tname=\"title\"\n\t\t\t\tvalue={props.course.title}\n\t\t\t\terror={props.errors.title}\n\t\t\t/>\n\n\t\t\t<SelectInput\n\t\t\t\tid=\"author\"\n\t\t\t\tname=\"authorId\"\n\t\t\t\tlabel=\"Author\"\n\t\t\t\tonChange={props.onChange}\n\t\t\t\tvalue={props.course.authorId}\n\t\t\t\terror={props.errors.authorId}\n\t\t\t\tauthors={props.authors}\n\t\t\t/>\n\n\t\t\t<TextInput\n\t\t\t\tid=\"category\"\n\t\t\t\tlabel=\"Category\"\n\t\t\t\tname=\"category\"\n\t\t\t\tonChange={props.onChange}\n\t\t\t\tvalue={props.course.category}\n\t\t\t\terror={props.errors.category}\n\t\t\t/>\n\n\t\t\t<input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\n\t\t</form>\n\t);\n}\n\nCourseForm.propTypes = {\n\tcourse: PropTypes.object.isRequired,\n\tonSubmit: PropTypes.func.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\terrors: PropTypes.object.isRequired,\n};\n\nexport default CourseForm;\n\n","import React, { useState, useEffect } from \"react\";\nimport CourseForm from \"./CourseForm\";\nimport courseStore from \"../stores/courseStore\";\nimport { toast } from \"react-toastify\";\nimport * as courseActions from \"../actions/courseActions\";\n\nconst ManageCoursePage = (props) => {\n\tconst [errors, setErrors] = useState({});\n\n\tconst [courses, setCourses] = useState(courseStore.getCourses());\n\tconst [course, setCourse] = useState({\n\t\tid: null,\n\t\tslug: \"\",\n\t\ttitle: \"\",\n\t\tauthorId: null,\n\t\tcategory: \"\",\n\t});\n\n\tconst [authors, setAuthors] = useState(courseStore.getAuthors());\n\n\tuseEffect(() => {\n\t\tcourseStore.addChangeListener(onChange);\n\n\t\tconst slug = props.match.params.slug; // from the path `/courses/:slug`\n\t\tif (courses.length === 0) {\n\t\t\tcourseActions.loadCourses();\n\t\t\tcourseActions.loadAuthors();\n\t\t} else if (slug) {\n\t\t\tsetCourse(courseStore.getCourseBySlug(slug));\n\t\t}\n\t\t//if (authors.length === 0) courseActions.loadAuthors();\n\t\treturn () => courseStore.removeChangeListener(onChange);\n\t}, [courses.length, props.match.params.slug]);\n\n\tfunction onChange() {\n\t\tsetCourses(courseStore.getCourses());\n\t\tsetAuthors(courseStore.getAuthors());\n\t}\n\n\tfunction handleChange({ target }) {\n\t\tsetCourse({\n\t\t\t...course,\n\t\t\t[target.name]: target.value,\n\t\t});\n\t}\n\n\tfunction formIsValid() {\n\t\tconst _errors = {};\n\n\t\tif (!course.title) _errors.title = \"Title is required\";\n\t\tif (!course.authorId) _errors.authorId = \"Author ID is required\";\n\t\tif (!course.category) _errors.category = \"Category is required\";\n\n\t\tsetErrors(_errors);\n\t\t// Form is valid if the errors object has no properties\n\t\treturn Object.keys(_errors).length === 0;\n\t}\n\n\tfunction handleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tif (!formIsValid()) return;\n\t\tcourseActions.saveCourse(course).then(() => {\n\t\t\tprops.history.push(\"/courses\");\n\t\t\ttoast.success(\"Course saved.\");\n\t\t});\n\t}\n\n\t/*\n\t * TEST\n\t */\n\tconsole.log(authors);\n\tconsole.log(courses);\n\n\treturn (\n\t\t<>\n\t\t\t<h2>Manage Course</h2>\n\t\t\t<CourseForm\n\t\t\t\terrors={errors}\n\t\t\t\tcourse={course}\n\t\t\t\tauthors={authors}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default ManageCoursePage;\n\n","import React from \"react\";\nimport HomePage from \"./HomePage\";\nimport AboutPage from \"./AboutPage\";\nimport Header from \"./common/Header\";\nimport CoursesPage from \"./CoursesPage\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport NotFoundPage from \"./NotFoundPage\";\nimport ManageCoursePage from \"./ManageCoursePage\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <ToastContainer autoClose={3000} hideProgressBar />\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/courses\" component={CoursesPage} />\n        <Route path=\"/about\" component={AboutPage} />\n        <Route path=\"/course/:slug\" component={ManageCoursePage} />\n        <Route path=\"/course\" component={ManageCoursePage} />\n        <Redirect from=\"/about-page\" to=\"about\" />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nrender(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}